{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter,\n//         };\n//     }\n\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if (action.type === 'decrement'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if (action.type === 'toggle'){\n//         return {\n//             //we must always set the other states, when we update a single state\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         };\n//     }\n\n//     return state;\n// };\n\n//use toolkit instead\n// const store = createStore(counterReducer);\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","counter","counterSlice","auth"],"sources":["/Users/natnaelganoro/Documents/TechProjects/React/Section19-Redux/01-starting-project/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialAuthState = { isAuthenticated: false };\n\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n        },\n    }\n});\n \n// const counterReducer = (state = initialState, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter,\n//         };\n//     }\n\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if (action.type === 'decrement'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n\n//     if (action.type === 'toggle'){\n//         return {\n//             //we must always set the other states, when we update a single state\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         };\n//     }\n\n//     return state;\n// };\n\n\n//use toolkit instead\n// const store = createStore(counterReducer);\nconst store = configureStore({\n    reducer: { \n        counter: counterSlice.reducer, \n        auth: authSlice.reducer\n    }\n});\n\n\n\nexport default store;"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAM,CAAC;AAEnD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACNC,KAAKA,CAACC,KAAK,EAAE;MACTA,KAAK,CAACN,eAAe,GAAG,IAAI;IAChC,CAAC;IACDO,MAAMA,CAACD,KAAK,EAAE;MACVA,KAAK,CAACN,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EACzBW,OAAO,EAAE;IACLC,OAAO,EAAEC,YAAY,CAACF,OAAO;IAC7BG,IAAI,EAAEX,SAAS,CAACQ;EACpB;AACJ,CAAC,CAAC;AAIF,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}